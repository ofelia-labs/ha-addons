diff --git a//dev/null b/.github/workflows/ci-privileged.yml
index 0000000000000000000000000000000000000000..d232117275e4df6cc225a995a79efef6e8cc6c3b 100644
--- a//dev/null
+++ b/.github/workflows/ci-privileged.yml
@@ -0,0 +1,179 @@
+---
+name: Privileged CI
+on:
+  push:
+  pull_request:
+
+permissions:
+  contents: read
+
+concurrency:
+  group: ci-privileged-${{ github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  validate:
+    runs-on: ubuntu-latest
+    services:
+      docker:
+        image: docker:24-dind
+        options: >-
+          --privileged
+          --tmpfs /tmp
+          --tmpfs /run
+          --storage-driver overlay2
+        env:
+          DOCKER_TLS_CERTDIR: ""
+        ports:
+          - 2375:2375
+
+    env:
+      DOCKER_HOST: tcp://docker:2375
+      DOCKER_TLS_CERTDIR: ""
+      # ADDON_DIR is set by the detection step
+
+    steps:
+      - uses: actions/checkout@v4
+
+      - name: Verify DinD ready
+        run: |
+          for i in {1..40}; do (docker version && break) || sleep 2; done
+          docker info
+
+      - name: Detect add-on directory
+        id: finddir
+        shell: bash
+        run: |
+          set -euo pipefail
+          pick_root=false
+          if [[ -f Dockerfile && -f config.yaml ]]; then pick_root=true; fi
+          candidates=()
+          if $pick_root; then candidates+=("."); fi
+          for d in chrony-nts addon add-on ha-addon docker src; do
+            if [[ -d "$d" && -f "$d/Dockerfile" && -f "$d/config.yaml" ]]; then
+              candidates+=("$d")
+            fi
+          done
+          if [[ ${#candidates[@]} -eq 0 ]]; then
+            while IFS= read -r -d '' f; do
+              dir=$(dirname "$f")
+              [[ -f "$dir/Dockerfile" ]] && candidates+=("$dir")
+            done < <(git ls-files -z | grep -zE '/config\.yaml$')
+          fi
+          if [[ ${#candidates[@]} -eq 0 ]]; then
+            echo "No add-on directory (Dockerfile + config.yaml) found" >&2
+            exit 1
+          fi
+          addon_dir="${candidates[0]}"
+          for c in "${candidates[@]}"; do
+            if (( ${#c} < ${#addon_dir} )); then addon_dir="$c"; fi
+          done
+          echo "ADDON_DIR=$addon_dir" | tee -a "$GITHUB_ENV"
+          echo "dir=$addon_dir" >> "$GITHUB_OUTPUT"
+          echo "Using $addon_dir"
+
+      - name: Lint YAML (config.yaml)
+        uses: ibiqlik/action-yamllint@v3
+        with:
+          file_or_dir: ${{ env.ADDON_DIR }}/config.yaml
+          config_file: .yamllint.yaml
+        continue-on-error: true
+
+      - name: Lint Dockerfile (hadolint)
+        uses: hadolint/hadolint-action@v3.1.0
+        with:
+          dockerfile: ${{ env.ADDON_DIR }}/Dockerfile
+          config: .hadolint.yaml
+        continue-on-error: true
+
+      - name: Lint shell scripts (ShellCheck)
+        uses: ludeeus/action-shellcheck@master
+        with:
+          severity: info
+        continue-on-error: true
+
+      - name: Lint workflows (actionlint)
+        uses: raven-actions/actionlint@v2
+        continue-on-error: true
+
+      - name: Enable Buildx
+        run: docker buildx create --use --name builder || docker buildx use builder
+
+      - name: Build image (local load)
+        run: docker buildx build --load -t chrony-nts:test "$ADDON_DIR"
+
+      - name: Container Structure Tests
+        run: |
+          docker run --rm \
+            -v "$PWD/container-structure-test.yaml":/tests.yml:ro \
+            -v /var/run/docker.sock:/var/run/docker.sock \
+            gcr.io/gcp-runtimes/container-structure-test:v1.15.0 test \
+            --driver docker --image chrony-nts:test --config /tests.yml
+
+      - name: Privileged smoke checks
+        run: |
+          docker run --rm --privileged chrony-nts:test sh -lc '
+            set -e
+            command -v chronyd
+            chronyd --version
+            command -v chronyc
+            chronyc -v || true
+          '
+
+      - name: Run comprehensive internal test suite
+        run: |
+          chmod +x ci/test.sh
+          docker network create ntsnet || true
+          docker run -d --name chrony-nts --network ntsnet --privileged \
+            chrony-nts:test sh -lc 'sleep 1; tail -f /dev/null'
+          docker cp ci/test.sh chrony-nts:/test.sh
+          docker exec -e ADDON_DIR="$ADDON_DIR" chrony-nts sh -lc 'chmod +x /test.sh && /test.sh'
+
+      - name: "E2E: query server from client container (soft-fail)"
+        run: |
+          set -e
+          # Attempt a basic query to the NTP server over the CI docker network.
+          docker run --rm --network ntsnet alpine:3.20 sh -lc '
+            set -e
+            apk add --no-progress chrony busybox-extras >/dev/null
+            # Try chronyc against the server container by name
+            chronyc -h chrony-nts -n tracking || true
+            chronyc -h chrony-nts -n sources || true
+            # Fallback UDP probe via sntp (will not set time)
+            sntp -d -r chrony-nts || true
+          '
+
+      - name: SBOM (Syft) — artifact
+        uses: anchore/sbom-action@v0
+        with:
+          image: chrony-nts:test
+          output-file: sbom.spdx.json
+
+      - name: Vulnerability scan (Grype) — non-blocking
+        uses: anchore/scan-action@v4
+        with:
+          image: chrony-nts:test
+          fail-build: false
+
+      - name: Dockle linter — non-blocking
+        uses: goodwithtech/dockle-action@v0.3.16
+        with:
+          image: chrony-nts:test
+          failure-threshold: warn
+        continue-on-error: true
+
+      - name: Upload CI artifacts
+        if: always()
+        uses: actions/upload-artifact@v4
+        with:
+          name: ci-artifacts
+          path: |
+            sbom.spdx.json
+            ci/*.log
+            ci/*.txt
+
+      - name: Cleanup
+        if: always()
+        run: |
+          docker rm -f chrony-nts 2>/dev/null || true
+          docker network rm ntsnet 2>/dev/null || true
